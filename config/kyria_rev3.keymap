/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    //chain-length = <6>;

    chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  RGB  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&bt BT_CLR_ALL  &kp Q  &kp W  &kp E     &kp R         &kp T                                                    &kp Y    &kp U          &kp I            &kp O    &kp P     &bt BT_CLR_ALL
&kp ESC         &kp A  &kp S  &kp D     &kp F         &kp G                                                    &kp H    &kp J          &kp K            &kp L    &kp SEMI  &kp BSPC
&kp LSHFT       &kp Z  &kp X  &kp C     &kp V         &kp B      &kp LBKT  &kp BACKSLASH  &gresc     &kp RBKT  &kp N    &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp SQT
                              &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &mo 2     &kp RET        &kp SPACE  &mo 1     &kp TAB  &kp RIGHT_ALT  &kp RIGHT_SHIFT
            >;

            sensor-bindings =
                <&inc_dec_kp LC(RIGHT_ARROW) LC(LEFT_ARROW)>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;

            label = "Default";
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp K_NEXT K_PREV &inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "Functions";
        };

        symbol_layer {
            bindings = <
&trans  &kp N1           &kp N2             &kp N3    &kp N4          &kp N5                                           &kp NUMBER_6      &kp N7             &kp N8         &kp N9                &kp N0                 &trans
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp NUHS  &kp DOLLAR      &kp PERCENT                                      &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp EQUAL        &kp MINUS          &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON             &kp BACKSLASH          &trans
                                            &trans    &trans          &trans           &trans  &trans  &trans  &trans  &trans            &trans             &trans
            >;

            label = "Symbols";
        };

        media_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans      &trans            &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans      &trans            &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Media Controls";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conditional_media {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
